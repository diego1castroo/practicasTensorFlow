import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
datos_x = np.linspace(0,10,10) + np.random.uniform(-1,1,10)
datos_x
datos_y = np.linspace(0,10,10) + np.random.uniform(-1,1,10)
datos_y
plt.plot(datos_x,datos_y, '*')
y = mx + b 
np.random.rand(2)
m = tf.Variable(0.81)
b = tf.Variable(0.87)
error = 0 
for x,y in zip(datos_x, datos_y):
	y_pred = m*x + b
	error = error + (y - y_pred)**2
optimizador = tf.train.GradientDescentOptimizer(learning_rate= 0.001)
entrenamiento = optimizador.minimize(error)
inicializacion = tf.global_variables_initializer()
with tf.Session() as sesion:
	sesion.run(inicializacion})
	pasos = 1
	for i in rango(pasos):
		sesion.run(entrenamiento)
	final_m, final_b = sesion.run([m,b])
x_test = np.linspace(-1,11,10)
y_pred_2 = (final_m * x_test) + final_b
plt.plot(x_test, y_pred_2, 'r')
plt.plot(datos_x, datos_y, '*')
